<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="customerMapper">

	<resultMap type="Board" id="board_rm">

    <id property="boardNo" column="BOARD_NO" />

    <result property="boardTitle" column="BOARD_TITLE" />
    <result property="boardContent" column="BOARD_CONTENT" />
    <result property="bCreateDate" column="B_CREATE_DATE" />
    <result property="bUpdateDate" column="B_UPDATE_DATE" />
    <result property="boardDelFl" column="BOARD_DEL_FL" />
    <result property="bState" column="B_STATE" />
    <result property="memberNo" column="MEMBER_NO" />
    <result property="boardCd" column="BOARD_CD" />

	</resultMap>
	
	<resultMap id="reply_rm" type="Reply">
	  <id property="replyNo" column="REPLY_NO" />
	  <result property="replyCreatedDate" column="REPLY_CREATE_DATE" />
	  <result property="replyDelFlag" column="REPLY_DEL_FL" />
	  <result property="replyContent" column="REPLY_CONTENT" />
	  <result property="secretReplyStatus" column="SECRET_REPLY_STATUS" />
	  <result property="memberNo" column="MEMBER_NO" />
	  <result property="replyType" column="REPLY_TYPE" />
	  <result property="replyTypeNo" column="REPLY_TYPE_NO" />
	  <result property="parentNo" column="PARENT_REPLY_NO" />
	</resultMap>
	
	
	
	
	<!-- 공지사항 상위 6개 리스트 불러오기 -->
	<select id="selectNoticeBoardList" resultMap="board_rm">
		SELECT * FROM (
		    SELECT * FROM BOARD
		    WHERE BOARD_CD = 3
		      AND BOARD_DEL_FL = 'N'
		    ORDER BY BOARD_NO DESC
		)
		WHERE ROWNUM &lt;= 6
	</select>
	
	<!-- FAQ 상위 6개 리스트 불러오기 -->
	<select id="selectFAQBoardList" resultMap="board_rm">
		SELECT * FROM (
		    SELECT * FROM BOARD
		    WHERE BOARD_CD = ${boardCode}
		      AND BOARD_DEL_FL = 'N'
		    ORDER BY BOARD_NO DESC
		)
		WHERE ROWNUM &lt;= 5
	</select>

	<!-- 특정 게시판의 삭제되지 않은 게시글 수 조회 -->
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD
		WHERE BOARD_CD = ${boardCode}
		AND BOARD_DEL_FL = 'N'
	</select>
	
	<!-- 보드 리스트 불러오기 -->
	<select id="selectboardList" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
		TO_CHAR(B_CREATE_DATE, 'YYYY-MM-DD') B_CREATE_DATE,
		TO_CHAR(B_UPDATE_DATE, 'YYYY-MM-DD') B_UPDATE_DATE,
		B_STATE, MEMBER_NO, BOARD_CD
		FROM BOARD
		WHERE BOARD_CD = ${boardCode}
		AND BOARD_DEL_FL = 'N'
		ORDER BY BOARD_NO DESC
	</select>
	
	<!-- FAQ 전체 게시판의 삭제되지 않은 게시글 수 조회 -->
	<select id="getFAQAllListCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD
		WHERE BOARD_CD IN (9, 10, 11, 12, 13)
		AND BOARD_DEL_FL = 'N'
	</select>
	
	<!-- FAQ 전체 게시판의 삭제되지 않은 검색 게시글 수 조회 -->
	<select id="getSearchListCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD
		WHERE BOARD_CD IN (9, 10, 11, 12, 13)
		AND BOARD_DEL_FL = 'N'
		AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE '%${query}%')
	</select>
	
	<select id="searchFAQList" resultMap="board_rm">
	  SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
	         TO_CHAR(B_CREATE_DATE, 'YYYY-MM-DD') B_CREATE_DATE,
	         TO_CHAR(B_UPDATE_DATE, 'YYYY-MM-DD') B_UPDATE_DATE,
	         B_STATE, MEMBER_NO, BOARD_CD
	  FROM BOARD
	  WHERE BOARD_CD IN (9,10,11,12,13)
	  AND BOARD_DEL_FL = 'N'
	  AND (BOARD_TITLE LIKE '%${query}%' OR BOARD_CONTENT LIKE '%${query}%')
	  ORDER BY BOARD_NO DESC
	</select>
	
	<!-- FAQ 리스트 불러오기 -->
	<select id="allFAQList" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
		TO_CHAR(B_CREATE_DATE, 'YYYY-MM-DD') B_CREATE_DATE,
		TO_CHAR(B_UPDATE_DATE, 'YYYY-MM-DD') B_UPDATE_DATE,
		B_STATE, MEMBER_NO, BOARD_CD
		FROM BOARD
		WHERE BOARD_CD IN (9, 10, 11, 12, 13)
		AND BOARD_DEL_FL = 'N'
		ORDER BY BOARD_NO DESC
	</select>
	
	<!-- 글 상세 요소 불러오기 -->
	<select id="selectBoardDetail" resultMap="board_rm">
		SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
		TO_CHAR(B_CREATE_DATE, 'YYYY-MM-DD') B_CREATE_DATE,
		TO_CHAR(B_UPDATE_DATE, 'YYYY-MM-DD') B_UPDATE_DATE,
		B_STATE, MEMBER_NO, BOARD_CD
		FROM BOARD
		WHERE BOARD_NO = ${boardNo}
		AND BOARD_DEL_FL = 'N'
		ORDER BY BOARD_NO
	</select>

	<!-- 이전글 다음글 요소 불러오기 -->
	<select id="selectBeforeAfterBoard" resultMap="board_rm" parameterType="int">
    SELECT *
    FROM (
        SELECT * 
        FROM (
            SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
                   TO_CHAR(B_CREATE_DATE, 'YYYY-MM-DD') B_CREATE_DATE,
                   TO_CHAR(B_UPDATE_DATE, 'YYYY-MM-DD') B_UPDATE_DATE,
                   B_STATE, MEMBER_NO, BOARD_CD
            FROM BOARD
            WHERE BOARD_CD = 3
              AND BOARD_DEL_FL = 'N'
              AND BOARD_NO &lt; #{boardNo}
            ORDER BY BOARD_NO DESC
        )
        WHERE ROWNUM = 1

        UNION ALL

        SELECT *
        FROM (
            SELECT * 
            FROM (
                SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
                       TO_CHAR(B_CREATE_DATE, 'YYYY-MM-DD') B_CREATE_DATE,
                       TO_CHAR(B_UPDATE_DATE, 'YYYY-MM-DD') B_UPDATE_DATE,
                       B_STATE, MEMBER_NO, BOARD_CD
                FROM BOARD
                WHERE BOARD_CD = 3
                  AND BOARD_DEL_FL = 'N'
                  AND BOARD_NO 	&gt; #{boardNo}
                ORDER BY BOARD_NO ASC
            )
            WHERE ROWNUM = 1
        )
    )
    ORDER BY BOARD_NO
</select>
	
	<insert id="boardInsert" parameterType="Board"
		useGeneratedKeys="true">

		<selectKey order="BEFORE" resultType="_int"
			keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO BOARD
		VALUES(#{boardNo},
		#{boardTitle},
		#{boardContent},
		SYSDATE,
		DEFAULT, DEFAULT, DEFAULT,
		${memberNo},
		${boardCd})
	</insert>
	
	<insert id="insertImageList" parameterType="list">
		INSERT INTO IMG
		SELECT SEQ_IMG_NO.NEXTVAL, A.*
		FROM (

		<foreach collection="list" item="img" separator=" UNION ALL ">
			SELECT #{img.imageReName} IMG_RENAME,
				   #{img.imagePath} IMG_PATH,
				   #{img.imageOriginal} IMG_ORIGINAL,
				   #{img.imageLevel} IMG_LEVEL,
				   #{img.imageType} IMG_TYPE,
				   #{img.imageTypeNo} IMG_TYPE_NO
				   FROM DUAL
		</foreach>
		)A
	</insert>
	
	<!-- 검색된 공지사항 개수 조회 -->
	<select id="getSearchNoticeBoardCount" resultType="_int">
	  SELECT COUNT(*)
	  FROM BOARD
	  WHERE BOARD_DEL_FL = 'N'
	    AND BOARD_CD = #{boardCode}
	    AND BOARD_TITLE LIKE '%${query}%'
	</select>
	
	<!-- 공지사항 검색 리스트 -->
	<select id="selectSearchNoticeBoardList" resultMap="board_rm">
	  SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
		TO_CHAR(B_CREATE_DATE, 'YYYY-MM-DD') B_CREATE_DATE,
		TO_CHAR(B_UPDATE_DATE, 'YYYY-MM-DD') B_UPDATE_DATE,
		B_STATE, MEMBER_NO, BOARD_CD
	  FROM BOARD
	  WHERE BOARD_DEL_FL = 'N'
	    AND BOARD_CD = #{boardCode}
	    AND BOARD_TITLE LIKE '%${query}%'
	  ORDER BY BOARD_NO DESC
	</select>
	
	<!-- 1:1 게시판의 로그인 회원의 삭제되지 않은 게시글 수 조회 -->
	<select id="getAskListCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD
		WHERE BOARD_CD = ${boardCd}
		AND MEMBER_NO = ${memberNo}
		AND BOARD_DEL_FL = 'N'
	</select>
	
	<!-- 1:1 게시판의 로그인 회원의 리스트 -->
	<select id="selectAskBoardList" resultMap="board_rm">
	  SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
		TO_CHAR(B_CREATE_DATE, 'YYYY-MM-DD') B_CREATE_DATE,
		TO_CHAR(B_UPDATE_DATE, 'YYYY-MM-DD') B_UPDATE_DATE,
		B_STATE, MEMBER_NO, BOARD_CD
	  FROM BOARD
	  WHERE BOARD_DEL_FL = 'N'
	    AND BOARD_CD = #{boardCd}
	    AND MEMBER_NO = ${memberNo}
	  ORDER BY BOARD_NO DESC
	</select>
	
	<!-- 댓글 상세 요소 불러오기 -->
	<select id="selectReply" resultMap="reply_rm">
		SELECT REPLY_NO, REPLY_CONTENT,
		TO_CHAR(REPLY_CREATE_DATE, 'YYYY-MM-DD') REPLY_CREATE_DATE
		FROM REPLY
		WHERE REPLY_TYPE_NO = ${boardNo}
		AND REPLY_DEL_FL = 'N'
		AND REPLY_TYPE = 1
	</select>


	
</mapper>