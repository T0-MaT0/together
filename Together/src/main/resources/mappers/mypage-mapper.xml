<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mypageMapper">
	<!-- Board DTO에 대한 resultMap -->
	<resultMap type="Business" id="business_rm">
		<id property="boardNo" column="BOARD_NO" />
		<result property="boardName" column="BOARD_NAME" />
		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardContent" column="BOARD_CONTENT" />
		<result property="boardCreateDate" column="B_CREATE_DATE" />
		<result property="boardUpdateDate" column="B_UPDATE_DATE" />
		<result property="boardCode" column="BOARD_CD" />
		<result property="productPrice" column="PRODUCT_PRICE" />
		<result property="productCount" column="PRODUCT_COUNT" />
		<result property="deliveryFee" column="DELIVERY_FEE" />
		<result property="readCount" column="READ_COUNT" />
		<result property="categoryNo" column="CATEGORY_NO" />
		<result property="categoryName" column="CATEGORY_NAME" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberNickname" column="MEMBER_NICK" />
		<result property="profileImage" column="PROFILE_IMG" />
		<result property="parentCategoryName" column="PARENT_CATEGORY_NAME" />
		<result property="thumbnail" column="THUMBNAIL" />

		<!--
			collection 태그: select로 조회된 결과를 컬렉션(List)에 담아 지정된 필드에 세팅
			property: List를 담을 DTO의 필드명
			select: 실행할 select의 id
			column: 조회 결과 중 지정된 컬럼의 값을 파라미터로 전달
			javaType: List(컬렉션)의 타입을 지정
			ofType: List(컬렉션)의 제네릭(타입 제한) 지정
		-->
		<collection property="optionList" select="selectOptionList"
					column="BOARD_NO" javaType="java.util.ArrayList"
					ofType="BusinessOption" />
		<collection property="imageList" select="selectImageList"
					column="BOARD_NO" javaType="java.util.ArrayList"
					ofType="Image" />
	</resultMap>

	<!-- Image resultMap -->
	<resultMap type="Image" id="image_rm">
		<id property="imageNo" column="IMG_NO" />
		<result property="imagePath" column="IMG_PATH" />
		<result property="imageReName" column="IMG_RENAME" />
		<result property="imageOriginal" column="IMG_ORIGINAL" />
		<result property="imageLevel" column="IMG_LEVEL" />
		<result property="imageType" column="IMG_TYPE" />
		<result property="imageTypeNo" column="IMG_TYPE_NO" />
	</resultMap>

	<!-- BusinessOption resultMap -->
	<resultMap type="BusinessOption" id="businessOption_rm">
		<id property="optionNo" column="OPTION_NO" />
		<result property="optionName" column="OPTION_NAME" />
		<result property="boardNo" column="BOARD_NO" />
	</resultMap>

	<!-- Review resultMap -->
	<resultMap type="Review" id="review_rm">
		<id property="reviewNo" column="REVIEW_NO" />
		<result property="reviewContent" column="REVIEW_CONTENT" />
		<result property="reviewStar" column="REVIEW_STAR" />
		<result property="reviewCreatedDate" column="REVIEW_CREATED_DATE" />
		<result property="reviewUpdateDate" column="REVIEW_UPDATE_DATE" />
		<result property="reviewDelFleg" column="REVIEW_DEL_FL" />
		<result property="reviewType" column="REVIEW_TYPE" />
		<result property="reviewTypeNo" column="REVIEW_TYPE_NO" />
		<result property="memberNo" column="MEMBER_NO" />
	</resultMap>

	<!-- Reply resultMap -->
	<resultMap type="Reply" id="reply_rm">
		<id property="replyNo" column="REPLY_NO" />
		<result property="replyCreatedDate" column="REPLY_CREATE_DATE" />
		<result property="replyDelFlag" column="REPLY_DEL_FL" />
		<result property="replyContent" column="REPLY_CONTENT" />
		<result property="secretReplyStatus" column="SECRET_REPLY_STATUS" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="replyType" column="REPLY_TYPE" />
		<result property="replyTypeNo" column="REPLY_TYPE_NO" />
		<result property="parentNo" column="PARENT_REPLY_NO" />
	</resultMap>


	<!--product rm-->
	<resultMap type="Product" id="product_rm">
		<id property="boardNo" column="BOARD_NO" />
		<result property="boardTitle" column="BOARD_TITLE"/>
		<result property="boardContent" column="BOARD_CONTENT" />
		<result property="boardCode" column="BOARD_CD" />
		<result property="imgPath" column="IMG_PATH" />
		<result property="price" column="PRICE" />
		<result property="readCount" column="READ_COUNT" />
		<result property="category" column="CATEGORY_NAME" />
		<result property="categoryNo" column="CATEGORY_NO"/>
		<result property="businessNo" column="BUSINESS_NO" />
	</resultMap>


	<resultMap type="Member" id="member_rm">

		<!-- 기본 키 -->
		<id property="memberNo" column="MEMBER_NO" />

		<!-- 일반 컬럼 매핑 -->
		<result property="memberId" column="MEMBER_ID" />
		<result property="memberPw" column="MEMBER_PW" />
		<result property="memberNick" column="MEMBER_NICK" />
		<result property="memberGrade" column="MEMBER_GRADE" />
		<result property="memberName" column="MEMBER_NAME" />
		<result property="memberAddr" column="MEMBER_ADDR" />
		<result property="memberTel" column="MEMBER_TEL" />
		<result property="profileImg" column="PROFILE_IMG" />

		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberDelFl" column="MEMBER_DEL_FL" />
		<result property="authority" column="AUTHORITY" />
		<result property="memberBirth" column="MEMBER_BIRTH" />
		<result property="point" column="POINT" />

	</resultMap>

	<resultMap type="Brand" id="brand_rm">
		<id property="memberNo" column="MEMBER_NO" />
		<result property="memberName" column="MEMBER_NAME"/>
		<result property="memberNick" column="MEMBER_NICK" />
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberAddr" column="MEMBER_ADDR" />
		<result property="memberTel" column="MEMBER_TEL" />
		<result property="memberGrade" column="MEMBER_GRADE" />
		<result property="profileImage" column="PROFILE_IMG" />
		<result property="businessNo" column="BUSINESS_NO" />
		<result property="sumReadCount" column="SUM_READ_COUNT" />
	</resultMap>

	<select id="getPurchaseHistory" resultMap="product_rm">
		SELECT
			O.BOARD_NO,
			B.BOARD_TITLE,
			B.BOARD_CONTENT,
			B.BOARD_CD,
			COALESCE(I1.IMG_PATH || I1.IMG_RENAME, I2.IMG_PATH || I2.IMG_RENAME) AS IMG_PATH,
			P.PRODUCT_PRICE AS PRICE,
			P.READ_COUNT,
			C.CATEGORY_NAME,
			C.CATEGORY_NO
		FROM (
				 SELECT ORDER_NO, BOARD_NO
				 FROM "ORDER"
				 WHERE MEMBER_NO = ${memberNo}
				 ORDER BY ORDER_NO DESC
			 ) O
				 LEFT JOIN BOARD B ON O.BOARD_NO = B.BOARD_NO
				 LEFT JOIN (
			SELECT IMG_TYPE_NO, IMG_PATH, IMG_RENAME
			FROM IMG
			WHERE IMG_TYPE = 1 AND IMG_LEVEL = 0
		) I1 ON B.BOARD_NO = I1.IMG_TYPE_NO
				 LEFT JOIN (
			SELECT IMG_TYPE_NO, IMG_PATH, IMG_RENAME
			FROM IMG
			WHERE IMG_TYPE = 2 AND IMG_LEVEL = 0
		) I2 ON B.BOARD_NO = I2.IMG_TYPE_NO
				 LEFT JOIN PRODUCT P ON B.BOARD_NO = P.BOARD_NO
				 LEFT JOIN CATEGORY C ON P.CATEGORY_NO = C.CATEGORY_NO
		WHERE B.BOARD_DEL_FL = 'N'
		  AND P.PRODUCT_COUNT > 0
	</select>

	<select id="getCategoryPick" resultMap="product_rm">
		SELECT
			B.BOARD_NO,
			BOARD_TITLE,
			BOARD_CONTENT,
			BOARD_CD,
			COALESCE(I1.IMG_TYPE, I2.IMG_TYPE) AS IMG_TYPE,
			COALESCE(TO_CHAR(I1.IMG_PATH) || TO_CHAR(I1.IMG_RENAME), TO_CHAR(I2.IMG_PATH) || TO_CHAR(I2.IMG_RENAME)) AS IMG_PATH,
			PRODUCT_PRICE AS PRICE,
			READ_COUNT,
			CATEGORY_NAME,
			C.CATEGORY_NO
		FROM (
				 SELECT *
				 FROM PRODUCT
				 WHERE CATEGORY_NO = ${categoryNo}
			 ) P
				 LEFT JOIN CATEGORY C ON P.CATEGORY_NO = C.CATEGORY_NO
				 LEFT JOIN BOARD B ON P.BOARD_NO = B.BOARD_NO
				 LEFT JOIN (
			SELECT IMG_TYPE_NO, IMG_TYPE, IMG_PATH, IMG_RENAME
			FROM IMG
			WHERE IMG_TYPE = 1 AND IMG_LEVEL = 0
		) I1 ON B.BOARD_NO = I1.IMG_TYPE_NO
				 LEFT JOIN (
			SELECT IMG_TYPE_NO, IMG_TYPE, IMG_PATH, IMG_RENAME
			FROM IMG
			WHERE IMG_TYPE = 2 AND IMG_LEVEL = 0
		) I2 ON B.BOARD_NO = I2.IMG_TYPE_NO
		ORDER BY READ_COUNT DESC
			FETCH FIRST 5 ROWS ONLY
	</select>

	<select id="getPickProduct" resultMap="product_rm">
		SELECT
			PK.BOARD_NO,
			B.BOARD_TITLE,
			B.BOARD_CONTENT,
			B.BOARD_CD,
			COALESCE(I1.IMG_PATH || I1.IMG_RENAME, I2.IMG_PATH || I2.IMG_RENAME) AS IMG_PATH,
			P.PRODUCT_PRICE AS PRICE,
			P.READ_COUNT,
			C.CATEGORY_NAME,
			C.CATEGORY_NO
		FROM (
				 SELECT BOARD_NO
				 FROM PICK
				 WHERE MEMBER_NO = ${memberNo}
			 ) PK
				 LEFT JOIN BOARD B ON PK.BOARD_NO = B.BOARD_NO
				 LEFT JOIN (
			SELECT IMG_TYPE_NO, IMG_PATH, IMG_RENAME
			FROM IMG
			WHERE IMG_TYPE = 1 AND IMG_LEVEL = 0
		) I1 ON PK.BOARD_NO = I1.IMG_TYPE_NO
				 LEFT JOIN (
			SELECT IMG_TYPE_NO, IMG_PATH, IMG_RENAME
			FROM IMG
			WHERE IMG_TYPE = 2 AND IMG_LEVEL = 0
		) I2 ON PK.BOARD_NO = I2.IMG_TYPE_NO
				 LEFT JOIN PRODUCT P ON PK.BOARD_NO = P.BOARD_NO
				 LEFT JOIN CATEGORY C ON P.CATEGORY_NO = C.CATEGORY_NO
		WHERE B.BOARD_DEL_FL = 'N'
		  AND P.PRODUCT_COUNT > 0
	</select>

	<select id="recommendBrand" resultMap="member_rm">
		SELECT MEMBER_NO ,MEMBER_NICK ,PROFILE_IMG
		FROM (SELECT DISTINCT MEMBER_NO
			  FROM (
					   SELECT BOARD_NO
					   FROM PICK
					   WHERE MEMBER_NO = ${memberNo}
					   UNION
					   SELECT BOARD_NO
					   FROM "ORDER"
					   WHERE MEMBER_NO = ${memberNo}
				   ) P
					   LEFT JOIN BOARD B ON P.BOARD_NO = B.BOARD_NO
			  WHERE BOARD_CD = 2)
				 LEFT JOIN "MEMBER" USING(MEMBER_NO)
		WHERE MEMBER_DEL_FL = 'N'
		FETCH FIRST 9 ROWS ONLY
	</select>

	<select id="pickBrand" resultMap="brand_rm">
		SELECT MEMBER_NO,
		    MEMBER_NICK,
		    PROFILE_IMG,
		    MEMBER_NAME,
		    MEMBER_GRADE,
		    BUSINESS_NO,
		    MEMBER_ADDR,
		    COALESCE(READ_SUM.SUM_READ_COUNT, 0) AS SUM_READ_COUNT
		FROM (
		    SELECT DISTINCT BOARD.MEMBER_NO
		    FROM PICK
		    JOIN BOARD USING (BOARD_NO)
		    WHERE PICK.MEMBER_NO = ${memberNo}
		      AND BOARD_DEL_FL = 'N'
		      AND BOARD_CD = 2
		) MEMBER_LIST
		JOIN MEMBER USING (MEMBER_NO)
		JOIN COMPANY USING (MEMBER_NO)
		LEFT JOIN (
		    SELECT 
		        MEMBER_NO, 
		        SUM(READ_COUNT) SUM_READ_COUNT
		    FROM BOARD
		    
		    JOIN PRODUCT USING (BOARD_NO)
		    GROUP BY MEMBER_NO
		) READ_SUM USING (MEMBER_NO)
		WHERE MEMBER_DEL_FL = 'N'
	</select>




</mapper>