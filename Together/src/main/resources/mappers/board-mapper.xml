<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">
	<!-- Board DTO에 대한 resultMap -->
	<resultMap type="Business" id="business_rm">
		<id property="boardNo" column="BOARD_NO" />
		<result property="boardName" column="BOARD_NAME" />
		<result property="boardTitle" column="BOARD_TITLE" />
		<result property="boardContent" column="BOARD_CONTENT" />
		<result property="boardCreateDate" column="B_CREATE_DATE" />
		<result property="boardUpdateDate" column="B_UPDATE_DATE" />
		<result property="boardCode" column="BOARD_CD" />
		<result property="productPrice" column="PRODUCT_PRICE" />
		<result property="productCount" column="PRODUCT_COUNT" />
		<result property="deliveryFee" column="DELIVERY_FEE" />
		<result property="readCount" column="READ_COUNT" />
		<result property="categoryNo" column="CATEGORY_NO" />
		<result property="parentCategoryNo" column="PARENT_CATEGORY_NO" />
		<result property="categoryName" column="CATEGORY_NAME" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="memberNickname" column="MEMBER_NICK" />
		<result property="profileImage" column="PROFILE_IMG" />
		<result property="parentCategoryName" column="PARENT_CATEGORY_NAME" />
		<result property="thumbnail" column="THUMBNAIL" />
		
		<!-- 
			collection 태그: select로 조회된 결과를 컬렉션(List)에 담아 지정된 필드에 세팅 
			property: List를 담을 DTO의 필드명
			select: 실행할 select의 id
			column: 조회 결과 중 지정된 컬럼의 값을 파라미터로 전달
			javaType: List(컬렉션)의 타입을 지정
			ofType: List(컬렉션)의 제네릭(타입 제한) 지정
		-->
		<collection property="optionList" select="selectOptionList"
					column="BOARD_NO" javaType="java.util.ArrayList"
					ofType="BusinessOption" />
		<collection property="imageList" select="selectImageList"
					column="BOARD_NO" javaType="java.util.ArrayList"
					ofType="Image" />
	</resultMap>
	
	<!-- Image resultMap -->
	<resultMap type="Image" id="image_rm">
		<id property="imageNo" column="IMG_NO" />
		<result property="imagePath" column="IMG_PATH" />
		<result property="imageReName" column="IMG_RENAME" />
		<result property="imageOriginal" column="IMG_ORIGINAL" />
		<result property="imageLevel" column="IMG_LEVEL" />
		<result property="imageType" column="IMG_TYPE" />
		<result property="imageTypeNo" column="IMG_TYPE_NO" />
	</resultMap>
	
	<!-- BusinessOption resultMap -->
	<resultMap type="BusinessOption" id="businessOption_rm">
		<id property="optionNo" column="OPTION_NO" />
		<result property="optionName" column="OPTION_NAME" />
		<result property="boardNo" column="BOARD_NO" />
	</resultMap>
	
	<!-- Review resultMap -->
	<resultMap type="Review" id="review_rm">
		<id property="reviewNo" column="REVIEW_NO" />
		<result property="reviewContent" column="REVIEW_CONTENT" />
		<result property="reviewStar" column="REVIEW_STAR" />
		<result property="reviewCreatedDate" column="REVIEW_CREATED_DATE" />
		<result property="reviewUpdateDate" column="REVIEW_UPDATE_DATE" />
		<result property="reviewDelFleg" column="REVIEW_DEL_FL" />
		<result property="reviewType" column="REVIEW_TYPE" />
		<result property="reviewTypeNo" column="REVIEW_TYPE_NO" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="orderNo" column="ORDER_NO" />
		
		<result property="memberNickname" column="MEMBER_NICK"/>
		<result property="memberProfile" column="MEMBER_PROFILE"/>
		<result property="businessThumbnail" column="BUSINESS_THUMBNAIL"/>
		
		<collection property="imageList" select="selectReviewImageList"
					column="REVIEW_NO" javaType="java.util.ArrayList"
					ofType="Image" />
		<collection property="replyList" select="selectReviewReply"
					column="REVIEW_NO" javaType="java.util.ArrayList"
					ofType="Reply" />
	</resultMap>
	
	<!-- Reply resultMap -->
	<resultMap type="Reply" id="reply_rm">
		<id property="replyNo" column="REPLY_NO" />
		<result property="replyCreatedDate" column="REPLY_CREATE_DATE" />
		<result property="replyDelFlag" column="REPLY_DEL_FL" />
		<result property="replyContent" column="REPLY_CONTENT" />
		<result property="secretReplyStatus" column="SECRET_REPLY_STATUS" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="replyType" column="REPLY_TYPE" />
		<result property="replyTypeNo" column="REPLY_TYPE_NO" />
		<result property="parentNo" column="PARENT_REPLY_NO" />
		
		<result property="memberNickname" column="MEMBER_NICK"/>
		
		<result property="thumbnail" column="THUMBNAIL"/>
		
		<collection property="commentList" select="selectReplyComment"
					column="REPLY_NO" javaType="java.util.ArrayList"
					ofType="Reply" />
	</resultMap>
	
	<!-- 주문 resultMap -->
	<resultMap type="Order" id="order_rm">
		<id property="orderNo" column="ORDER_NO" />
		<result property="quantity" column="QUANTITY" />
		<result property="orderAddress" column="DELIVERY_ADDR" />
		<result property="trackingNo" column="TRACKING_NO" />
		<result property="boardNo" column="BOARD_NO" />
		<result property="memberNo" column="MEMBER_NO" />
		<result property="optionNo" column="OPTION_NO" />
	</resultMap>
	
	<!-- 포인트 사용 내역 resultMap -->
	<resultMap type="PointUsage" id="usage_rm">
		<id property="usageNo" column="USAGE_NO" />
		<result property="usageAmount" column="USED_AMOUNT" />
		<result property="usageType" column="USAGE_TYPE" />
		<result property="usageTypeNo" column="USAGE_TYPE_NO" />
		<result property="status" column="STATUS" />
		<result property="usageDate" column="USED_DATE" />
		<result property="memberNo" column="MEMBER_NO" />
	</resultMap>
	
	<resultMap type="Category" id="category_rm">
		<id property="categoryNo" column="CATEGORY_NO" />
		<result property="categoryName" column="CATEGORY_NAME" />
		<result property="parentCategoryNo" column="PARENT_CATEGORY_NO" />
	</resultMap>
	
	<!-- 특정 상품 이미지 조회 -->
	<select id="selectImageList" resultMap="image_rm">
		SELECT * FROM IMG 
		WHERE IMG_TYPE = 1 AND IMG_TYPE_NO = #{boardNo} 
		ORDER BY IMG_LEVEL
	</select>
	
	<!-- 특정 상품 리뷰 이미지 조회 -->
	<select id="selectReviewImageList" resultMap="image_rm">
		SELECT * FROM IMG 
		WHERE IMG_TYPE = 3 AND IMG_TYPE_NO = #{reviewNo} 
		ORDER BY IMG_LEVEL
	</select>
	
	<!-- 특정 리뷰 이미지 삭제 -->
	<delete id="deleteImage">
		DELETE FROM IMG 
		WHERE IMG_NO = #{imageNo}
	</delete>
	
	<!-- 특정 리뷰 이미지 레벨 수정 -->
	<update id="updateImageLevel">
		UPDATE IMG SET IMG_LEVEL = #{imageLevel} WHERE IMG_NO = #{imageNo}
	</update>
	
	<!-- 특정 상품 옵션 조회 -->
	<select id="selectOptionList" resultMap="businessOption_rm">
		SELECT * FROM PRODUCT_OPTION 
		WHERE BOARD_NO = #{boardNo} 
		ORDER BY OPTION_NO
	</select>
		
	<!-- 특정 상품의 삭제되지 않은 리뷰 개수 조회 -->
	<select id="getReviewListCount" resultType="_int">
		SELECT COUNT(*) FROM REVIEW R 
		JOIN BOARD B ON(R.REVIEW_TYPE_NO = B.BOARD_NO)
		WHERE REVIEW_TYPE = #{boardCode}
		AND B.BOARD_DEL_FL = 'N'
		AND REVIEW_DEL_FL = 'N'
		<if test='key!="all"'>
			AND REVIEW_TYPE_NO = #{boardNo} 
		</if>
	</select>
	
	<!-- 상품 리뷰 목록 조회 -->
	<select id="selectReviewList" resultMap="review_rm">
		SELECT R.*, 
			(SELECT MEMBER_NICK FROM "MEMBER" M 
			WHERE M.MEMBER_NO = R.MEMBER_NO) MEMBER_NICK,
			(SELECT PROFILE_IMG FROM "MEMBER" M 
			WHERE M.MEMBER_NO = R.MEMBER_NO) MEMBER_PROFILE,
			(SELECT IMG_PATH||IMG_RENAME FROM IMG I 
			WHERE I.IMG_TYPE_NO = R.REVIEW_TYPE_NO
			AND I.IMG_TYPE = 1 AND IMG_LEVEL = 0) BUSINESS_THUMBNAIL,
			(SELECT OPTION_NAME FROM PRODUCT_OPTION P
			WHERE OPTION_NO = (SELECT OPTION_NO FROM "ORDER" O
				WHERE O.ORDER_NO = R.ORDER_NO)) OPTION_NAME,
			(SELECT QUANTITY FROM "ORDER" O 
			WHERE O.ORDER_NO = R.ORDER_NO) QUANTITY
		FROM REVIEW R JOIN BOARD B ON(R.REVIEW_TYPE_NO = B.BOARD_NO)
		WHERE REVIEW_TYPE = #{boardCode}
		AND B.BOARD_DEL_FL = 'N'
		AND REVIEW_DEL_FL = 'N'
		<if test='key!="all"'>
			AND R.REVIEW_TYPE_NO = #{boardNo} 
		</if>
		ORDER BY REVIEW_NO DESC
	</select>
		
	<!-- 특정 리뷰의 답글 목록 조회 -->
	<select id="selectReviewReply" resultMap="reply_rm">
		SELECT R.*,
			(SELECT MEMBER_NICK FROM "MEMBER" M 
			WHERE M.MEMBER_NO = R.MEMBER_NO) MEMBER_NICK
		FROM REPLY R 
		JOIN REVIEW RV ON(R.REPLY_TYPE_NO = RV.REVIEW_NO)
		WHERE REPLY_TYPE = 2 
		AND RV.REVIEW_DEL_FL = 'N'
		AND REPLY_DEL_FL = 'N'
		AND REPLY_TYPE_NO = #{reviewNo} 
		ORDER BY REPLY_NO DESC
	</select>
	
	<!-- 리뷰 삭제 -->
	<update id="deleteReview">
		UPDATE REVIEW SET REVIEW_DEL_FL = 'Y' WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	<!-- 리뷰에 댓글 등록 -->
	<insert id="insertReviewReply" parameterType="Reply" useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int" keyProperty="replyNo">
			SELECT SEQ_REPLY_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO REPLY VALUES(#{replyNo}, DEFAULT, DEFAULT, 
		#{replyContent}, DEFAULT, #{memberNo}, 2, #{replyTypeNo},
		NULL)
	</insert>
	
	<!-- 리뷰에 댓글 수정 -->
	<update id="updateReviewReply">
		UPDATE REPLY SET REPLY_CONTENT = #{replyContent} 
		WHERE REPLY_NO = #{replyNo}
	</update>
	
	<!-- 리뷰에 댓글 삭제 -->
	<update id="deleteReviewReply">
		UPDATE REPLY SET REPLY_DEL_FL = 'Y' 
		WHERE REPLY_NO = #{replyNo}
	</update>
		
	<!-- 특정 상품의 삭제되지 않은 문의 개수 조회 -->
	<select id="getReplyListCount" resultType="_int">
		SELECT COUNT(*) FROM REPLY R
		JOIN BOARD B ON(R.REPLY_TYPE_NO = B.BOARD_NO)
		WHERE REPLY_TYPE = 1 
		AND R.PARENT_REPLY_NO IS NULL
		AND B.BOARD_CD = #{boardCode}
		AND B.BOARD_DEL_FL = 'N'
		AND REPLY_DEL_FL = 'N'
		<if test='key!="all"'>
			AND R.REPLY_TYPE_NO = #{boardNo}
		</if>
		<if test="myQNA">
			AND R.MEMBER_NO = #{loginMemberNo}
		</if>
		<if test="notSecret">
			AND (R.SECRET_REPLY_STATUS = 'N' 
			OR R.MEMBER_NO = #{loginMemberNo})
		</if>
	</select>
	
	<!-- 특정 상품 문의 목록 조회 -->
	<select id="selectReplyList" resultMap="reply_rm">
		SELECT R.*, 
			(SELECT IMG_PATH || IMG_RENAME FROM IMG I
			WHERE I.IMG_TYPE_NO = R.REPLY_TYPE_NO AND I.IMG_LEVEL = 0
			AND I.IMG_TYPE = 1) THUMBNAIL,
			(SELECT MEMBER_NICK FROM "MEMBER" M 
			WHERE M.MEMBER_NO = R.MEMBER_NO) MEMBER_NICK
		FROM REPLY R 
		JOIN BOARD B ON(R.REPLY_TYPE_NO = B.BOARD_NO)
		WHERE REPLY_TYPE = 1 
		AND R.PARENT_REPLY_NO IS NULL
		AND B.BOARD_CD = #{boardCode}
		AND B.BOARD_DEL_FL = 'N'
		AND REPLY_DEL_FL = 'N'
		<if test='key!="all"'>
			AND R.REPLY_TYPE_NO = #{boardNo}
		</if>
		<if test="myQNA">
			AND R.MEMBER_NO = #{loginMemberNo}
		</if>
		<if test="notSecret">
			AND (R.SECRET_REPLY_STATUS = 'N' 
			OR R.MEMBER_NO = #{loginMemberNo})
		</if>
		ORDER BY REPLY_NO DESC
	</select>
	
	<!-- 리뷰 댓글 조회 -->
	<select id="selectReplyComment" resultMap="reply_rm">
		SELECT R.*,
			(SELECT MEMBER_NICK FROM "MEMBER" M 
			WHERE M.MEMBER_NO = R.MEMBER_NO) MEMBER_NICK
		FROM REPLY R 
		WHERE REPLY_TYPE = 1 
		AND REPLY_DEL_FL = 'N'
		AND PARENT_REPLY_NO = #{replyNo} 
		ORDER BY REPLY_NO DESC
	</select>
	
	<!-- 사업자 베너 이미지 목록 조회 -->
	<select id="selectBannerList" resultMap="image_rm">
		SELECT * FROM IMG WHERE IMG_TYPE_NO = 3 AND IMG_TYPE = 6
	</select>
	
	<!-- 상품 목록 조회(메인 화면) -->
	<select id="selectBusinessList" resultMap="business_rm">
		SELECT B.BOARD_NO, B.BOARD_TITLE, P.READ_COUNT, P.PRODUCT_PRICE, 
			M.MEMBER_NICK, C.CATEGORY_NAME,
			(SELECT PC.CATEGORY_NAME FROM CATEGORY PC 
			WHERE C.PARENT_CATEGORY_NO = PC.CATEGORY_NO) PARENT_CATEGORY_NAME,
			(SELECT I.IMG_PATH || I.IMG_RENAME FROM	IMG I	
			WHERE I.IMG_TYPE_NO = B.BOARD_NO AND I.IMG_LEVEL = 0
			AND I.IMG_TYPE = 1) THUMBNAIL
		FROM BOARD B
		LEFT JOIN PRODUCT P ON(P.BOARD_NO = B.BOARD_NO) 
		LEFT JOIN "MEMBER" M ON(M.MEMBER_NO = B.MEMBER_NO)
		LEFT JOIN COMPANY COM ON(COM.MEMBER_NO = M.MEMBER_NO) 
		LEFT JOIN CATEGORY C ON(C.CATEGORY_NO = P.CATEGORY_NO)
		WHERE BOARD_DEL_FL = 'N' AND BOARD_CD = #{boardCode}
		AND COM.PERMISSION_FL = 'Y'
		ORDER BY
		<if test='category=="hot"'>
			P.READ_COUNT DESC,
		</if>
		BOARD_NO DESC FETCH FIRST 6 ROWS ONLY
	</select>
	
	<!-- 상품 목록 조회(조회수, 최신순, 검색) -->
	<select id="selectSearchBusinessList" resultMap="business_rm">
		SELECT B.BOARD_NO, B.BOARD_TITLE, P.READ_COUNT, P.PRODUCT_PRICE, 
			M.MEMBER_NICK, C.CATEGORY_NAME,
			(SELECT PC.CATEGORY_NAME FROM CATEGORY PC 
			WHERE C.PARENT_CATEGORY_NO = PC.CATEGORY_NO) PARENT_CATEGORY_NAME,
			(SELECT I.IMG_PATH || I.IMG_RENAME FROM IMG I	
			WHERE I.IMG_TYPE_NO = B.BOARD_NO AND I.IMG_LEVEL = 0
			AND I.IMG_TYPE = 1) THUMBNAIL
		FROM BOARD B
		LEFT JOIN PRODUCT P ON(P.BOARD_NO = B.BOARD_NO) 
		LEFT JOIN "MEMBER" M ON(M.MEMBER_NO = B.MEMBER_NO)
		LEFT JOIN COMPANY COM ON(COM.MEMBER_NO = M.MEMBER_NO)
		LEFT JOIN CATEGORY C ON(C.CATEGORY_NO = P.CATEGORY_NO)
		WHERE BOARD_DEL_FL = 'N' AND BOARD_CD = #{boardCode}
		AND COM.PERMISSION_FL = 'Y'
		ORDER BY
		<if test='category=="hot"'>
			P.READ_COUNT DESC,
		</if>
		BOARD_NO DESC
	</select>
	
	<!-- 카테고리 목록 조회 -->
	<select id="selectCategoryList" resultMap="category_rm">
		SELECT * FROM CATEGORY
	</select>
	
	<!-- 상품 판매 허가 여부 조회 -->
	<select id="selectPermissionFl" resultType="string">
		SELECT PERMISSION_FL FROM COMPANY WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 게시글 등록 -->
	<insert id="insertBoard" parameterType="Business" useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int" keyProperty="boardNo">
			SELECT SEQ_BOARD_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO BOARD VALUES(#{boardNo}, #{boardTitle}, 
		#{boardContent}, DEFAULT, NULL, DEFAULT, NULL, #{memberNo},
		#{boardCode})
	</insert>
	
	<!-- 상품 등록 -->
	<insert id="insertProduct">
		INSERT INTO PRODUCT VALUES(#{boardNo}, #{productPrice}, 
		#{productCount}, #{deliveryFee}, DEFAULT, #{categoryNo})
	</insert>
	
	<!-- 옵션 리스트 삽입 -->
	<insert id="insertOptionList" parameterType="list">
		INSERT INTO PRODUCT_OPTION 
		SELECT SEQ_PRODUCT_OPTION_NO.NEXTVAL, A.*
		FROM (
			<foreach collection="list" item="option" separator=" UNION ALL ">
				SELECT #{option.optionName} OPTION_NAME, 
					#{option.boardNo} BOARD_NO 
				FROM DUAL
			</foreach>
			) A
	</insert>
	
	<!-- 사업자 상품 삭제 -->
	<update id="deleteProduct">
		UPDATE BOARD SET BOARD_DEL_FL = 'Y' WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 사업자 게시글 수정 -->
	<update id="updateBoard">
		UPDATE BOARD SET BOARD_TITLE = #{boardTitle}, 
		BOARD_CONTENT = #{boardContent}, B_UPDATE_DATE = SYSDATE
		WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 사업자 상품 수정 -->
	<update id="updateProduct">
		UPDATE PRODUCT SET PRODUCT_PRICE = #{productPrice}, 
		PRODUCT_COUNT = #{productCount}, DELIVERY_FEE = #{deliveryFee},
		CATEGORY_NO = #{categoryNo} WHERE BOARD_NO = #{boardNo}
	</update>

	<!-- 상품 옵션 수정 -->
	<update id="updateOption">
		UPDATE PRODUCT_OPTION SET OPTION_NAME = #{optionName} 
		WHERE OPTION_NO = #{optionNo}
	</update>
	
	<!-- deleteList가 일치하는 이미지 존재 여부 확인 -->
	<select id="checkImage" resultType="_int">
		SELECT COUNT(*) FROM IMG 
		WHERE IMG_TYPE = ${imageType} 
		AND IMG_TYPE_NO = ${imageTypeNo} 
		AND IMG_LEVEL IN (${deleteList})
	</select>
	
	<!-- 이미지 삭제 -->
	<delete id="deleteBusinessImage">
		DELETE FROM IMG 
		WHERE IMG_TYPE = ${imageType} 
		AND IMG_TYPE_NO = ${imageTypeNo} 
		AND IMG_LEVEL IN (${deleteList})
	</delete>
	
	<!-- 이미지 수정 -->
	<update id="updateImage">
		UPDATE IMG SET 
		IMG_RENAME = #{imageReName}, IMG_ORIGINAL = #{imageOriginal}
		WHERE IMG_TYPE = ${imageType} AND IMG_TYPE_NO = ${imageTypeNo} 
		AND IMG_LEVEL = ${imageLevel}
	</update>
	
	<!-- 이미지 삽입 -->
	<insert id="insertImage">
		INSERT INTO IMG VALUES(SEQ_IMG_NO.NEXTVAL, 
			#{imageReName}, #{imagePath}, #{imageOriginal}, 
			#{imageLevel}, #{imageType}, #{imageTypeNo})
	</insert>
	
	<!-- 특정 상품의 삭제되지 않은 게시글 조회 -->
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM BOARD B
		LEFT JOIN "MEMBER" M ON(M.MEMBER_NO = B.MEMBER_NO)
		LEFT JOIN COMPANY COM ON(COM.MEMBER_NO = M.MEMBER_NO)
		WHERE B.BOARD_CD = #{boardCode} AND B.BOARD_DEL_FL = 'N'
		AND COM.PERMISSION_FL = 'Y'
	</select>
	
	<!-- 브랜드 상품 게시글 상세 조회 -->
	<select id="selectBusiness" resultMap="business_rm">
		SELECT B.BOARD_NO, B.BOARD_TITLE, M.MEMBER_NICK, P.PRODUCT_PRICE, 
			P.DELIVERY_FEE, P.PRODUCT_COUNT, B.BOARD_CONTENT, B.MEMBER_NO,
			P.CATEGORY_NO, (SELECT PC.CATEGORY_NO FROM CATEGORY PC 
			WHERE C.PARENT_CATEGORY_NO = PC.CATEGORY_NO) PARENT_CATEGORY_NO
		FROM BOARD B
		LEFT JOIN "MEMBER" M ON(B.MEMBER_NO = M.MEMBER_NO) 
		LEFT JOIN PRODUCT P ON(P.BOARD_NO = B.BOARD_NO) 
		LEFT JOIN CATEGORY C ON(C.CATEGORY_NO = P.CATEGORY_NO)
		WHERE B.BOARD_DEL_FL = 'N'
		AND B.BOARD_CD = #{boardCode}
		AND B.BOARD_NO = #{boardNo}
	</select>
	
	<!-- 찜하기 여부 확인 -->
	<select id="pickCheck" resultType="_int">
		SELECT COUNT(*) FROM PICK WHERE BOARD_NO = #{boardNo} AND MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 찜하기 테이블 삽입 -->
	<insert id="insertProductPick">
		INSERT INTO PICK VALUES (${memberNo}, #{boardNo})
	</insert>
	
	<!-- 찜하기 테이블 삭제 -->
	<delete id="deleteProductPick">
		DELETE FROM PICK WHERE BOARD_NO = #{boardNo} AND MEMBER_NO = #{memberNo}
	</delete>
	
	<!-- 조회수 증가 -->
	<update id="updateReadCount">
		UPDATE PRODUCT SET READ_COUNT = READ_COUNT + 1 WHERE BOARD_NO = #{boardNo}
	</update>
	
	<!-- 주문 내역 삽입 -->
	<insert id="insertOrder" parameterType="Order" useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int" keyProperty="orderNo">
			SELECT SEQ_ORDER_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO "ORDER" VALUES(#{orderNo}, #{quantity}, 
		#{orderAddress}, NULL, #{boardNo}, #{memberNo}, #{optionNo})
	</insert>
	
	<!-- 포인트 사용 내역 삽입 -->
	<insert id="insertPointUsage" parameterType="PointUsage" useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int" keyProperty="usageNo">
			SELECT SEQ_USAGE_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO POINT_USAGE VALUES(#{usageNo}, #{usageAmount}, 
		1, #{usageTypeNo}, DEFAULT, DEFAULT, #{memberNo})
	</insert>
	
	<!-- 회원의 포인트 수정 -->
	<update id="updatePoint">
		UPDATE "MEMBER" SET POINT = #{point} WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 포인트 사용 내역 조회 -->
	<select id="selectUsage" resultMap="usage_rm">
		SELECT * FROM POINT_USAGE 
		WHERE USAGE_TYPE = 1 AND USAGE_TYPE_NO = #{orderNo}
	</select>
	
	<!-- 주문 내역 조회 -->
	<select id="selectOrder" resultMap="order_rm">
		SELECT * FROM "ORDER" O
		WHERE O.BOARD_NO = #{boardNo} AND O.MEMBER_NO = #{memberNo}
		<if test="reviewNo!=-1">
			AND O.ORDER_NO = (SELECT R.ORDER_NO FROM REVIEW R
				WHERE R.REVIEW_NO = #{reviewNo})
		</if>
		<if test="reviewNo==-1">
			AND NOT EXISTS (SELECT 1 FROM REVIEW R 
				WHERE R.ORDER_NO = O.ORDER_NO)
		</if>
		ORDER BY O.ORDER_NO DESC FETCH FIRST 1 ROWS ONLY
	</select>
	
	<!-- 리뷰 수정 시 리뷰 조회 -->
	<select id="selectReview" resultMap="review_rm">
		SELECT R.*, 
			(SELECT MEMBER_NICK FROM "MEMBER" M 
			WHERE M.MEMBER_NO = R.MEMBER_NO) MEMBER_NICK,
			(SELECT PROFILE_IMG FROM "MEMBER" M 
			WHERE M.MEMBER_NO = R.MEMBER_NO) MEMBER_PROFILE,
			(SELECT IMG_PATH||IMG_RENAME FROM IMG I 
			WHERE I.IMG_TYPE_NO = R.REVIEW_TYPE_NO
			AND I.IMG_TYPE = 1 AND IMG_LEVEL = 0) BUSINESS_THUMBNAIL,
			(SELECT OPTION_NAME FROM PRODUCT_OPTION P
			WHERE OPTION_NO = (SELECT OPTION_NO FROM "ORDER" O
				WHERE O.ORDER_NO = R.ORDER_NO)) OPTION_NAME,
			(SELECT QUANTITY FROM "ORDER" O 
			WHERE O.ORDER_NO = R.ORDER_NO) QUANTITY
		FROM REVIEW R JOIN BOARD B ON(R.REVIEW_TYPE_NO = B.BOARD_NO)
		WHERE REVIEW_NO = #{reviewNo}
		AND B.BOARD_DEL_FL = 'N'
		AND REVIEW_DEL_FL = 'N'
	</select>
	
	<!-- 리뷰 수정 -->
	<update id="updateReview">
		UPDATE REVIEW SET REVIEW_CONTENT = #{reviewContent}, 
		REVIEW_STAR = #{reviewStar}, REVIEW_UPDATE_DATE = SYSDATE 
		WHERE REVIEW_NO = #{reviewNo}
	</update>
	
	<!-- 리뷰 삽입 -->
	<insert id="insertReview" parameterType="Review" useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int" keyProperty="reviewNo">
			SELECT SEQ_REVIEW_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO REVIEW VALUES(#{reviewNo}, #{reviewContent}, 
		#{reviewStar}, DEFAULT, NULL, DEFAULT, #{reviewType},
		#{reviewTypeNo}, #{memberNo}, #{orderNo})
	</insert>
	
	<!-- 이미지 리스트 삽입 -->
	<insert id="insertImageList" parameterType="list">
		INSERT INTO IMG SELECT SEQ_IMG_NO.NEXTVAL, A.*
		FROM (
			<foreach collection="list" item="img" separator=" UNION ALL ">
				SELECT #{img.imageReName} IMG_RENAME, 
					#{img.imagePath} IMG_PATH, 
					#{img.imageOriginal} IMG_ORIGINAL, 
					#{img.imageLevel} IMG_LEVEL, 
					#{img.imageType} IMG_TYPE, 
					#{img.imageTypeNo} IMG_TYPE_NO 
				FROM DUAL
			</foreach>
			) A
	</insert>
	
	<!-- Q&A 등록 -->
	<insert id="insertReply" parameterType="Reply" useGeneratedKeys="true">
		<selectKey order="BEFORE" resultType="_int" keyProperty="replyNo">
			SELECT SEQ_REPLY_NO.NEXTVAL FROM DUAL
		</selectKey>
		INSERT INTO REPLY VALUES(#{replyNo}, DEFAULT, DEFAULT,
		#{replyContent}, #{secretReplyStatus}, #{memberNo}, 
		#{replyType}, #{replyTypeNo},
		<if test="parentNo==0">
			NULL
		</if>
		<if test="parentNo!=0">
			#{parentNo}
		</if>
		 )
	</insert>
	
	<!-- Q&A 수정 -->
	<update id="updateReply">
		UPDATE REPLY SET REPLY_CONTENT = #{replyContent},
		SECRET_REPLY_STATUS = #{secretReplyStatus} 
		WHERE REPLY_NO = #{replyNo}
	</update>
	
	<!-- Q&A 삭제 -->
	<update id="deleteReply">
		UPDATE REPLY SET REPLY_DEL_FL = 'Y' 
		WHERE REPLY_NO = #{replyNo}
	</update>
	
	<!-- 신고 접수 -->
	<insert id="insertReport" parameterType="Report">
        INSERT INTO REPORT (
            REPORT_NO,
            REPORT_TYPE,
            REPORT_TYPE_NO,
            REPORT_TITLE,
            REPORT_DETAIL,
            MEMBER_NO,
            REPORTED_USER_NO,
            REPORT_DATE,
            REPORT_STATUS
        ) VALUES (
            SEQ_REPORT_NO.NEXTVAL,
            #{reportType},
            #{reportTypeNo},
            #{reportTitle},
            #{reportDetail},
            #{memberNo},
            #{reportedUserNo},
            SYSDATE,
            '처리중'
        )
    </insert>
</mapper>